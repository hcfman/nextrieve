.\" Automatically generated by Pod::Man version 1.15
.\" Fri Nov 22 12:11:10 2002
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "NTVINDEX 1"
.TH NTVINDEX 1 "2.0.0" "2002-11-22" "NexTrieve"
.UC
.SH "NAME"
ntvindex \- NexTrieve indexer
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& ntvindex -[?vV] [-L logfile] [-I indexdir] [-R resfile]
\&          [filelist...]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBntvindex\fR adds text to a NexTrieve text index, creating the index
if necessary.
.PP
The text index is defined by a \fIresource file\fR, specified with
the \fB\s-1NTV_RESOURCE\s0\fR environment variable, or by using the \f(CW\*(C`\-R\*(C'\fR option.
A critical element in this resource file
is the <indexcreation> element,
whose content is to determining the structure of the
text index.  This is used by ntvindex to create the index.
.PP
A definition of what the resource file contains can be found
in \fIntvresourcefile\fR\|(5).
.PP
The files in \fIfilelist...\fR should each contain an \s-1XML\s0 definition of what
to index.  A filename of \*(L"\-\*(R" indicates to use standard input.
.PP
A definition of what the \s-1XML\s0 for the indexer looks like
can be found in \fIntvindexerxml\fR\|(5).  A short functional summary of this
\&\s-1XML\s0 can be found in the next section.
.PP
After a text index has been created or updated, you may wish to
optimize search access to it by running \fBntvopt\fR, an optimizer.
A description of how to run the optimizer can be found in \fIntvopt\fR\|(1).
.PP
A description of \fBntvcheck\fR, a tool for checking the integrity of
a nextrieve text index can be found in \fIntvcheck\fR\|(1).
.Sh "Indexer \s-1XML\s0"
.IX Subsection "Indexer XML"
This section gives a very fast overview of
the allowable structure of the \s-1XML\s0 that can be given to the indexer.
.PP
The \s-1XML\s0 given to the indexer specifies the attributes and content of
a sequence of documents that will be indexed.
.PP
Each document contains a possibly zero-length sequence of attributes,
and text to be indexed.
.PP
The text to be indexed can have particular named sections or \*(L"textypes\*(R"
present.
.PP
The structure of the \s-1XML\s0 closely follows the above notes, and can
be summarized with an example:
.PP
.Vb 2
\&    TABLESTART
\&    <ntv:docseq xmlns:ntv="http://www.nextrieve.com/1.0">
.Ve
.Vb 16
\&        <document>
\&            <attributes>
\&                <titleattr>A document title -- not searchable.</titleattr>
\&                <flagattr/> <!-- the flag "flagattr" is marked "on". -->
\&                <numberattr>45</numberattr>
\&            </attributes>
\&            <text>
\&                Normal document text.
\&                <title>
\&                    Text in the document title that is searchable --
\&                    a special text type that must be declared in the
\&                    resource file.
\&                </title>
\&                More normal document text.  This is just default text.
\&            </text>
\&        </document>
.Ve
.Vb 4
\&        <document>
\&            <!- the content of a second document... -->
\&            ...
\&        </document>
.Ve
.Vb 1
\&    </ntv:docseq>TABLEEND
.Ve
In the example above there are two <document> elements, defining two
documents to index.
.PP
In the first document, three attributes are being set.  \fBtitleattr\fR
is a string attribute, \fBflagattr\fR is a flag attribute being set to \*(L"on\*(R"
(or present), and \fBnumberattr\fR is a numeric attribute being set to the value
45.
.PP
To be valid, these attributes and types must be declared in the resource
file using appropriate <attribute> elements
at the time the text index is created.
.PP
The text to be indexed for the first document is present in the <text>
element.  It can be seen that there is a nested <title> element containing
a document title.  To be valid, this must also be declared in the resource
file using an appropriate <texttype> element.  Other text present in the
<text> element is default text, and is always valid.
.PP
Having a separate text type such as <title> allows a user to search
only title-tagged text, for example.
.Sh "Character Encoding"
.IX Subsection "Character Encoding"
\&\fBntvindex\fR uses the publicly available \fIexpat\fR library to analyze the
\&\s-1XML\s0 being indexed.  As such, it is possible to use the built-in character
encodings understood by \fIexpat\fR, namely:
.Ip "\(bu" 4
\&\s-1ISO-8859\-1\s0
.Ip "\(bu" 4
\&\s-1UTF-8\s0
.Ip "\(bu" 4
\&\s-1UTF-16\s0
.Ip "\(bu" 4
\&\s-1US-ASCII\s0
.PP
These encodings can be used directly by using, for example:
.PP
.Vb 1
\&    <?xml version="1.0" encoding="ISO-8859-1"?>
.Ve
at the start of the \s-1XML\s0 stream being indexed.
.PP
If the documents to be indexed are in another character set, they must
be translated to one of the above as the \s-1XML\s0 for them is generated.
.PP
It should be noted that all the information is stored in the nextrieve
text index in \s-1UTF-8\s0 form, not simply in the encoding presented
to \fBntvindex\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
.if n .Ip "\f(CW""""\-R""""\fR resfile" 4
.el .Ip "\f(CW\-R\fR resfile" 4
.IX Item "-R resfile"
\&\fIresfile\fR specifies the location of the \fIresource file\fR describing the
text index to be indexed.  This overrides any \s-1NTV_RESOURCE\s0 environment
variable that is set.
.if n .Ip "\f(CW""""\-I""""\fR indexdir" 4
.el .Ip "\f(CW\-I\fR indexdir" 4
.IX Item "-I indexdir"
The \fIindexdir\fR specified overrides any \fIindexdir\fR line in the resource
file.  \fIindexdir\fR specifies the directory where the *.ntv files are located
that
comprise the text index.  This option is useful where there are
several physical text indexes using the same schema which defined in a single
resource file.
.if n .Ip "\f(CW""""\-L""""\fR logfile" 4
.el .Ip "\f(CW\-L\fR logfile" 4
.IX Item "-L logfile"
\&\fIlogfile\fR explicitly overrides any \fIlogfile\fR line in a resource file
and any \s-1NTV_ERRORLOG\s0 environment variable.
.if n .Ip "\f(CW""""\-v""""\fR" 4
.el .Ip "\f(CW\-v\fR" 4
.IX Item "-v"
\&\*(L"Verbose\*(R" mode \*(-- each document that is indexed will cause a line to be
output by \fBntvindex\fR indicating the number of documents in the text index,
and an approximiate total amount of text indexed.
.if n .Ip "\f(CW""""\-?""""\fR" 4
.el .Ip "\f(CW\-?\fR" 4
.IX Item "-?"
Write extended help information to standard output and exit.
.if n .Ip "\f(CW""""\-V""""\fR" 4
.el .Ip "\f(CW\-V\fR" 4
.IX Item "-V"
Write version information to standard output and exit.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
A list of diagnostics should go here.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.Ip "\s-1NTV_RESOURCE\s0" 4
.IX Item "NTV_RESOURCE"
The location of the resource file describing the text index.
Can be overridden by the \f(CW\*(C`\-R\*(C'\fR option.
.Ip "\s-1NTV_ERRORLOG\s0" 4
.IX Item "NTV_ERRORLOG"
Where to log error messages.
Overridden by a \fBlogfile\fR line in the resource file.
Can be overridden by the \f(CW\*(C`\-L\*(C'\fR option.
.SH "CAVEATS"
.IX Header "CAVEATS"
.SH "BUGS"
.IX Header "BUGS"
.SH "RESTRICTIONS"
.IX Header "RESTRICTIONS"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 1
\&    ntvsearch(1), ntvsearchd(1), ntvresources(5), nextrieve-caching(1).
.Ve
