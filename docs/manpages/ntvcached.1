.\" Automatically generated by Pod::Man version 1.15
.\" Fri Nov 22 12:11:08 2002
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "NTVCACHED 1"
.TH NTVCACHED 1 "2.0.0" "2002-11-22" "NexTrieve"
.UC
.SH "NAME"
ntvcached \- NexTrieve caching server
.SH "SYNPOSIS"
.IX Header "SYNPOSIS"
.Vb 4
\& ntvcached [C<-?>] [C<-V>]
\&           [C<-L> logfile]
\&           [C<-u> user] [C<-l> listen-depth]
\&           C<-A> addr C<-P> port C<-F> cache-cfg.xml
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBntvcached\fR implements a nextrieve caching server.  This is a daemon
that is located between a client and a nextrieve search server.
.PP
It makes no difference to a client whether the client is communicating
with a nextrieve search server or a nextrieve caching server.
The only difference is one of efficiency, as the caching server holds
result lists for a while.
Thus, if the client uses \*(L"page next\*(R" or \*(L"page previous\*(R", for example, the
caching server can provide results without loading the search server at
all.
.PP
Like the \fBntvsearchd\fR nextrieve search server, \fBntvcached\fR
will listen on the nominated address/port pair
for incoming connections.
.PP
It will accept a stream of incoming queries in \s-1XML\s0 form from each
connection, and respond with results (\*(L"hitlists\*(R") in \s-1XML\s0 form.
.PP
A definition of what the \s-1XML\s0 for a query looks like
can be found in \fIntvqueryxml\fR\|(5).
.PP
A definition of what the \s-1XML\s0 for the result list looks like
can be found in \fIntvhitlistxml\fR\|(5).
.PP
The operation of the caching server is controlled by the \f(CW\*(C`\-F\*(C'\fR cache-cfg.xml
parameter.  A definition of the content of a caching configuration 
file an be found in \fIntvcachecfgxml\fR\|(5).  A short functional summary
can be found in the following section.
.Sh "Caching Server Configuration File"
.IX Subsection "Caching Server Configuration File"
\&\fBntvcached\fR can operate on one or more \fIphysical\fR text indexes.
A physical text index is simply a directory in which there are is a collection
of *.ntv files.
.PP
These physical text indexes can be on remote machines,
with file systems that are not directly accessible.
Each of these physical text indexes is assumed to be
served by one or more \fBntvsearchd\fR nextrieve search servers, and the
machine addresses and ports of these servers are found in the caching
configuration file.
.PP
In addition, \fBntvcached\fR allows the use of multiple
\&\*(L"logical\*(R" text indexes inside single physical text index.
A \*(L"logical\*(R" text index is simply defined to be a constraint applied
to a search on the physical text index.
.PP
If there are many rather small text indexes that are wanted to be created
and searched, it is frequently more effective to create a single
physical text index containing all the documents from all the \*(L"logical\*(R"
indexes, and the logical indexes are discriminated using a simple
constraint.  The constraint is normally just a single flag value, one
flag per different logical text index.
.PP
\&\fBntvcached\fR understands how to modify any user-specified constraint
that arrives in a query to augment it with the extra constraint required
to search within particular logical text index.  The constraint
information to apply is found in the caching configuration file.
.Sh "Caching Server Signal Operations"
.IX Subsection "Caching Server Signal Operations"
While \fBntvcached\fR is running, it is possible to perform two
operations using signals.
.if n .Ip "kill \f(CW""""\-HUP""""\fR" 4
.el .Ip "kill \f(CW\-HUP\fR" 4
.IX Item "kill -HUP"
\&\fBntvcached\fR will print its state to the logfile.  The state
of the caching server includes the number of clients currently attached
and their outstanding requests.  It includes the state of each nextrieve
server and any outstanding requests on each.  It also includes the number
of entries in the caching server's cache, the number of client requests served,
and the number of those requests that were served directly from the cache.
.if n .Ip "kill \f(CW""""\-USR1""""\fR" 4
.el .Ip "kill \f(CW\-USR1\fR" 4
.IX Item "kill -USR1"
The caching server will zero out or \*(L"flush\*(R" its cache.
.Sh "Caching Server Automatic Operations"
.IX Subsection "Caching Server Automatic Operations"
When \fBntvcached\fR is performing normal operations it may notice
that a particular nextrieve search server has \*(L"gone away\*(R", either due to a
system failure or due to the fact that the server has been simply
killed to use machine resources for some other task.
.PP
In that case, any queries that were being waited on (if any) from that
nextrieve server are re-distributed to other servers, the offending
server is marked as \*(L"in error\*(R", a message is logged,
and processing continues.
If the caching server system
is saturated, the nextrieve \fIserver\fR\|(s) marked \*(L"in error\*(R" are periodically
retried so that if they are re-started they start serving requests again
automatically with no other user-intervention required.
.SH "OPTIONS"
.IX Header "OPTIONS"
.if n .Ip "\f(CW""""\-L""""\fR logfile" 4
.el .Ip "\f(CW\-L\fR logfile" 4
.IX Item "-L logfile"
\&\fIlogfile\fR explicitly overrides any \fIlogfile\fR line in a resource file
and any \s-1NTV_ERRORLOG\s0 environment variable.
.if n .Ip "\f(CW""""\-A""""\fR address, \f(CW""""\-P""""\fR port" 4
.el .Ip "\f(CW\-A\fR address, \f(CW\-P\fR port" 4
.IX Item "-A address, -P port"
Specify the machine address and port to listen on for incoming connections.
.if n .Ip "\f(CW""""\-?""""\fR" 4
.el .Ip "\f(CW\-?\fR" 4
.IX Item "-?"
Write extended help information to standard output and exit.
.if n .Ip "\f(CW""""\-V""""\fR" 4
.el .Ip "\f(CW\-V\fR" 4
.IX Item "-V"
Write version information to standard output and exit.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
A list of diagnostics should go here.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.Ip "\s-1NTV_RESOURCE\s0" 4
.IX Item "NTV_RESOURCE"
The location of the resource file describing the text index.
Can be overridden by the \f(CW\*(C`\-R\*(C'\fR option.
.Ip "\s-1NTV_ERRORLOG\s0" 4
.IX Item "NTV_ERRORLOG"
Where to log error messages.
Overridden by a \fBlogfile\fR line in the resource file,
and \f(CW\*(C`\-L\*(C'\fR option.
.SH "CAVEATS"
.IX Header "CAVEATS"
.SH "BUGS"
.IX Header "BUGS"
.SH "RESTRICTIONS"
.IX Header "RESTRICTIONS"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 1
\&    ntvindex(1), ntvsearch(1), ntvqueryxml(5), ntvhitlistxml(5).
.Ve
