.\" Automatically generated by Pod::Man version 1.15
.\" Fri Nov 22 12:11:11 2002
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "ntvresourcefile 5"
.TH ntvresourcefile 5 "2.0.0" "2002-11-22" "NexTrieve"
.UC
.SH "NAME"
ntvresourcefile \- NexTrieve resource file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A nextrieve \fIresource file\fR is a simple text file containing information
in \s-1XML\s0 form about or related to a text index.
.PP
A \s-1DTD\s0 describing the resource file format can be found in \fIntvdtds\fR\|(5).
.PP
The structure of a resource file is simple; there is an outer <ntv:resource>
container which contains a small number of other top-level containers:
.Ip "\fImiscellaneous\fR" 4
.IX Item "miscellaneous"
There are a small number of miscellaneous elements
specifying information that's generally useful
to all nextrieve products regarding this text index.
.Ip "indexcreation" 4
.IX Item "indexcreation"
The <indexcreation> container collects all the information related to
the structure of a text index.  If any information in this section is changed,
the text index should be rebuilt with \fBntvindex\fR from original text sources.
.Ip "indexing" 4
.IX Item "indexing"
The <indexing> container holds the information used by \fBntvindex\fR
as it performs indexing operations.  This is information relating
to what to do with various error conditions, etc.
.Ip "searching" 4
.IX Item "searching"
The <searching> container holds the information used by \fBntvsearch\fR
and \fBntvsearchd\fR to determine how to perform searches and how to
return results.
.Ip "ultralite" 4
.IX Item "ultralite"
The <ultralite> \fIcontainer\fR\|(s) are solely used by ntvultralite, nextrieve's
\&\s-1HTML\s0 template filling process.
.PP
All the containers are \s-1EMPTY\s0 containers, ie, no text is expected in a
container.
.PP
In summary, the top-level structure of a nextrieve resource file looks
something like this:
.PP
.Vb 2
\&    TABLESTART
\&    <ntv:resource xmlns:ntv="http://www.nextrieve.com/1.0">
.Ve
.Vb 3
\&        <misc1 .../>
\&        <misc2 .../>
\&        ...
.Ve
.Vb 4
\&        <indexcreation>
\&            <index-creation-specific.../>
\&            ...
\&        </indexcreation>
.Ve
.Vb 4
\&        <indexing>
\&            <ntvindex-specific.../>
\&            ...
\&        </indexing>
.Ve
.Vb 4
\&        <searching>
\&            <nextrieve-specific.../>
\&            ...
\&        </searching>
.Ve
.Vb 4
\&        <ultralite>
\&            <ntvultralite-specific.../>
\&            ...
\&        </ultralite>
.Ve
.Vb 1
\&    </ntv:resource> TABLEEND
.Ve
The content of the resource file is discussed according to these
classifications.  Within each classification, containers are
presented in no particular order.
.Sh "Miscellaneous Elements"
.IX Subsection "Miscellaneous Elements"
.Ip "<\fBindexdir name='\f(BIindex-directory\fB'\fR/>" 4
.IX Item "<indexdir name='index-directory'/>"
\&\fIindex-directory\fR is the name of the directory
in which all the text-index-related
files are found.
These files all end with the suffix \*(L".ntv\*(R".
.Ip "<\fBlogfile name='\f(BIlogfile-name\fB'\fR/>" 4
.IX Item "<logfile name='logfile-name'/>"
During its operation, the indexer (\fBntvindex\fR) or searcher (\fBntvsearch\fR
or \fBntvsearchd\fR)
may print various time-stamped messages.
These messages are printed to stderr (the standard error output) and,
if specified, to the file specified as \fIlogfile-name\fR.
.if n .Ip "<\fBcache size=""""\f(BIcachesize\fB""""\fR/>" 4
.el .Ip "<\fBcache size=``\f(BIcachesize\fB''\fR/>" 4
.IX Item "<cache size=""cachesize"/>"
A memory cache is used during indexing and during searching, to increase
performance.
This line specifies the amount of memory to allocate for the cache.
\&\fIcachesize\fR is a number which can be suffixed with K, M or G indicating
kilobytes, megabytes or gigabytes.  If only a number is used for \fIcachesize\fR,
it is taken to be the size in bytes.
.Sp
By default a value of 10M (10Mb) is used, but normally a much larger
value is specified, dependant somewhat on how large the index is and
how much physical memory is available on the indexing machine.
Values of 100M are not uncommon.
.Sh "<indexcreation> Container"
.IX Subsection "<indexcreation> Container"
The containers permitted in an <indexcreation> container are as follows:
.if n .Ip "<\fBexact [accentaction=""""distinct""""|""""merge""""|""""both""""]\fR/>" 4
.el .Ip "<\fBexact [accentaction=``distinct''|``merge''|``both'']\fR/>" 4
.IX Item "<exact [accentaction="distinct|merge|both]/>"
.PD 0
.if n .Ip "<\fBfuzzy [accentaction=""""distinct""""|""""merge""""|""""both""""]\fR/>" 4
.el .Ip "<\fBfuzzy [accentaction=``distinct''|``merge''|``both'']\fR/>" 4
.IX Item "<fuzzy [accentaction="distinct|merge|both]/>"
.PD
The <exact> element indicates that the text index will contain an
\&\*(L"exact\*(R" part.  The <fuzzy> element indicates that the text index will contain
a fuzzy part.
.Sp
With an exact index it is possible to search for words in an exact fashion.
Only words that exactly match words in a particular search query are
relevant.
.Sp
With a fuzzy index it is possible to search for words in a fuzzy fashion.
Words that are \fIsimilar\fR to original query words can be considered relevant.
A \*(L"fuzzy\*(R" level, specified in the search, gives an indication of the
permitted word variation.
.Sp
It is possible to have both \fIexact\fR and \fIfuzzy\fR in the same index.  In
fact, if both are present, the accuracy and quality of fuzzy searches is
significantly improved by the information found in the exact index.
.Sp
The optional \fIaccentaction\fR attribute specifies what to do with accented
characters, as defined by the <utf8data foldfilename=...> tag.
.RS 4
.Ip "distinct" 4
.IX Item "distinct"
Accented characters are \*(L"preserved\*(R".
.Sp
For example, if the word \*(L"voilà\*(R"
is indexed, it can only be found in an exact index by searching for
\&\*(L"voilà\*(R" (with the accent).  In a fuzzy index, searching for \*(L"voilà\*(R"
will consider \*(L"voilà\*(R" to be an exact match, and \*(L"voila\*(R" (without the
accent) to be \*(L"further away\*(R".
.Ip "merge" 4
.IX Item "merge"
Accented characters are \*(L"decomposed\*(R" to their closest non-accented equivalents.
.Sp
For example, if the word \*(L"voilà\*(R" is indexed, it will be stored in the index
as \*(L"voila\*(R" (no accents).  It will be found by an exact or fuzzy search for
either \*(L"voilà\*(R" or \*(L"voila\*(R", which both map automatically to a search for
\&\*(L"voila\*(R" (no accents).
.Ip "both" 4
.IX Item "both"
Both the above operations are performed.
.Sp
If the word \*(L"voilà\*(R" is indexed, it is stored in the index as both \*(L"voilà\*(R"
\&\fIand\fR \*(L"voila\*(R".
During searching, if the word \*(L"voila\*(R" (no accent) is searched for, both
\&\*(L"voila\*(R" and \*(L"voilà\*(R" will therefore be found.
If the word \*(L"voilà\*(R" (accented) is searched for in an exact fashion,
only occurrences of \*(L"voilà\*(R" will be found.  A fuzzy search for
\&\*(L"voilà\*(R" will treat \*(L"voila\*(R" to be \*(L"further away\*(R".
.Sp
In this way a search using non-accented text will find both non-accented
and accented forms of the words.  A search using explicitly accented text
will find only the accented forms that were indexed.
.RE
.RS 4
.Sp
It should be noted, however, that in the text \fIpreview\fR provided as
part of the search results, accented characters are displayed in their original
form.  The lines discussed above relate only the \fIsearching\fR of
the text as a consequence of how it was indexed.
.Sp
By default, an accentaction of \*(L"both\*(R" is used for both exact and fuzzy
indexes.  It is recommended that if both an exact and fuzzy text index
are being created, that the accentaction of both is the same.
.RE
.if n .Ip "<\fBtexttype name=""""\f(BIttname\fB""""\fR/>" 4
.el .Ip "<\fBtexttype name=``\f(BIttname\fB''\fR/>" 4
.IX Item "<texttype name=""ttname"/>"
This element specifies the name of an allowable \*(L"text type\*(R".
.Sp
The <text> element of a document being indexed can contain nested
containers that are indexed specially.
If the name of a nested container matches one of the allowable
texttype names (as defined with a <texttype> element),
the text contained in that container will be indexed
in a manner that makes it searchable separately.  Eg,
.Sp
.Vb 1
\&    <texttype name="heading"/>
.Ve
allows the use of the following in the text of a document being indexed:
.Sp
.Vb 8
\&    TABLESTART
\&    <text>
\&        normal text.
\&        <heading>title text</heading>
\&        more normal text.
\&        <heading>more heading text</heading>
\&        more normal text.
\&    </text> TABLEEND
.Ve
It is then possible to search the text index looking at \fIonly\fR the heading
text, for example.  It is also possible to search the text index looking
at all text, but giving text found in <heading> containers a higher weight.
By default, all text types are searched.
.Sp
A discussion of search operations can be found in \fIntvqueryxml\fR\|(5).
.Sp
The number of different text types is somewhat limited \*(-- they should be
chosen with reasonable care.
.if n .Ip "<\fBattribute name=""""\f(BIattrname\fB"""" type=""""flag""""|""""number""""|""""string"""" key=""""key-unique""""|""""key-duplicates""""|""""notkey"""" nvals=""""1""""|""""*""""\fR/>" 4
.el .Ip "<\fBattribute name=``\f(BIattrname\fB'' type=``flag''|``number''|``string'' key=``key-unique''|``key-duplicates''|``notkey'' nvals=``1''|``*''\fR/>" 4
.IX Item "<attribute name=""attrname type=flag|number|string key=key-unique|key-duplicates|notkey nvals=1|*"/>"
An <attribute> element specifies
the characteristics of a particular per-document attribute.
.Sp
The name of the attribute is given by \fIattrname\fR.
.Sp
Attributes for a document are presented to the indexer in the \s-1XML\s0
input stream and are processed at the same time as the document text is
indexed.
Each attribute has a name by which it is referenced, and a value.  The
value can be one of a number of different types:
.RS 4
.if n .Ip "type=""""flag""""" 4
.el .Ip "type=``flag''" 4
.IX Item "type="flag"
The value of the attribute can be either 0 (off) or non-zero (on).
If the value of a particular flag attribute is not specified for a document,
it is taken to be \*(L"off\*(R".
Similarly, if the value of a flag attribute is explicitly specified as:
.Sp
.Vb 2
\&    TABLESTART
\&    <attrname>0</attrname> TABLEEND
.Ve
the value is taken to be \*(L"off\*(R".
If the value is specified as one of:
.Sp
.Vb 4
\&    TABLESTART
\&    <attrname/>
\&    <attrname></attrname>
\&    <attrname>1</attrname> TABLEEND
.Ve
the value is taken to be \*(L"on\*(R".
.if n .Ip "type=""""number""""" 4
.el .Ip "type=``number''" 4
.IX Item "type="number"
The value of the attribute can be a non-negative number in the range
0..2147483647 inclusive.
.Sp
If the value of a number attribute is not specified for a document,
the value is taken to be zero.
.if n .Ip "type=""""string""""" 4
.el .Ip "type=``string''" 4
.IX Item "type="string"
The value of the attribute can be any string of characters.
.RE
.RS 4
.Sp
It should be noted that the values of these attributes cannot be
\&\fIsearched\fR in the way document text can be.  The values of these
attributes can only be:
.RS 4
.RE
.Ip "\(bu" 4
Be used as part of a \fIconstraint\fR, restricting the set of valid
documents to return for a search result.
.Ip "\(bu" 4
Returned as part of search results, giving information about the
document found.
.RE
.RS 4
.Sp
The \*(L"key\*(R" parameter indicates the following characteristics of
a document attribute:
.RS 4
.RE
.if n .Ip "key=""""key-unique""""" 4
.el .Ip "key=``key-unique''" 4
.IX Item "key="key-unique"
A \*(L"key-unique\*(R" parameter implies that only one document in the text
index can have any particular attribute value.
If, during indexing, a second document is presented with an attribute
value of \fIattrname\fR that is already associated with a document in the
index, the \fIexisting document is automatically marked deleted\fR.
.if n .Ip "key=""""key-duplicates""""" 4
.el .Ip "key=``key-duplicates''" 4
.IX Item "key="key-duplicates"
A \*(L"key-duplicates\*(R" attribute will eventually allow fast retrieval of
documents when only the value of \fIattrname\fR is specified.
In the current release of NexTrieve \*(L"key-duplicates\*(R" is accepted but is
normally only used for string attributes where there are many occurrences
of the same per-document value: a side-effect of using \*(L"key-duplicates\*(R"
is that values are \*(L"shared\*(R" amongst documents.  All documents having
the same string value all point to the same piece of text, reducing
memory requirements if the strings are generally long and duplicated.
.if n .Ip "key=""""notkey""""" 4
.el .Ip "key=``notkey''" 4
.IX Item "key="notkey"
Attribute values are not keyed or shared in any way.
.RE
.RS 4
.Sp
The \*(L"nvals\*(R" parameter indicates if a single document can have only
at most one value of the attribute, or many:
.RS 4
.RE
.if n .Ip "nvals=""""1""""" 4
.el .Ip "nvals=``1''" 4
.IX Item "nvals="1"
A particular document can only have one value of this particular attribute.
A \*(L"filename\*(R" attribute is an example.
.if n .Ip "nvals=""""*""""" 4
.el .Ip "nvals=``*''" 4
.IX Item "nvals="*"
A particular document can have several values associated with this
particular attribute.  A \*(L"keyword\*(R" or \*(L"author\*(R" attribute is a good example.
In the \s-1XML\s0 stream being indexed, the multiple values of such an attribute
are defined simply by repeating the <attrname>...</attrname> specification,
eg:
.Sp
.Vb 9
\&    TABLESTART
\&    <document>
\&        <attributes>
\&            <attrname>value1</attrname>
\&            <attrname>value2</attrname>
\&            <attrname>value3</attrname>
\&        </attributes>
\&    ...
\&    TABLEEND
.Ve
.RE
.RS 4
.Sp
These per-document attributes are reported as part of the search results
for a query.
They can also be used as part of a \*(L"constraint\*(R" in a search,
an expression built up
out of attribute names and values that restrict the set of allowable
documents returned as the result of a query.  A discussion of
constraints in nextrieve can be found in \fIntvqueryxml\fR\|(5).
.Sp
For a flag-type attribute, the only valid settings for the other
parameters are 'key=\*(L"notkey\*(R" nvals=\*(L"1\*(R"'.
Other variations for a flag type attribute will return an error.
.RE
.if n .Ip "<\fButf8data classfile=""""\f(BIclassfilename\fB"""" foldfile=""""\f(BIfoldfilename\fB"""" decompfile=""""\f(BIdecompfilename\fB""""\fR/>" 4
.el .Ip "<\fButf8data classfile=``\f(BIclassfilename\fB'' foldfile=``\f(BIfoldfilename\fB'' decompfile=``\f(BIdecompfilename\fB''\fR/>" 4
.IX Item "<utf8data classfile=""classfilename foldfile=foldfilename decompfile=decompfilename"/>"
This element specifies names of files,
files whose content overrides compiled-in content
of nextrieve utilities.
The functions are all related to unicode encoding.
The compiled-in content of the nextrieve utilities has been extracted
from publicly available standards datafiles CaseFolding.txt and
UnicodeData.txt.
.Sp
For the file format of these files, refer to the section \*(L"\s-1UTF8\s0 Data Files\*(R"
below.
.Sh "Indexing Container"
.IX Subsection "Indexing Container"
The elements permitted in an <indexing> container are as follows:
.if n .Ip "<\fBunknowntext logaction=""""log""""|""""!log""""|""""stop"""" indexaction=""""ignore""""|""""default""""\fR/>" 4
.el .Ip "<\fBunknowntext logaction=``log''|``!log''|``stop'' indexaction=``ignore''|``default''\fR/>" 4
.IX Item "<unknowntext logaction="log|!log|stop indexaction=ignore|default/>"
.PD 0
.if n .Ip "<\fBnestedtext logaction=""""log""""|""""!log""""|""""stop"""" indexaction=""""ignore""""|""""inherit""""\fR/>" 4
.el .Ip "<\fBnestedtext logaction=``log''|``!log''|``stop'' indexaction=``ignore''|``inherit''\fR/>" 4
.IX Item "<nestedtext logaction="log|!log|stop indexaction=ignore|inherit/>"
.PD
During indexing of the <text> container of a document,
it is possible for the \fBntvindex\fR
to find containers that are unknown or too deeply nested.  \fBunknowntext\fR
and \fBnestedtext\fR specify what to do in those situations.
.RS 4
.if n .Ip "logaction=""""log""""" 4
.el .Ip "logaction=``log''" 4
.IX Item "logaction="log"
A message is logged and indexing continues.
.if n .Ip "logaction=""""!log""""" 4
.el .Ip "logaction=``!log''" 4
.IX Item "logaction="!log"
A message is not logged and indexing continues.
.if n .Ip "logaction=""""stop""""" 4
.el .Ip "logaction=``stop''" 4
.IX Item "logaction="stop"
A message is logged and indexing stops.
.if n .Ip "indexaction=""""ignore""""" 4
.el .Ip "indexaction=``ignore''" 4
.IX Item "indexaction="ignore"
The text contained in the offending container is simply ignored.
.if n .Ip "indexaction=""""default""""" 4
.el .Ip "indexaction=``default''" 4
.IX Item "indexaction="default"
The text contained in the unknown container is indexed as if it was
part of the top level default text of the document.
.if n .Ip "indexaction=""""inherit""""" 4
.el .Ip "indexaction=``inherit''" 4
.IX Item "indexaction="inherit"
If a text element is nested too deeply, the text it contains is indexed as
if it was part of its immediate parent.
.RE
.RS 4
.RE
.if n .Ip "<\fBunknownattrs logaction=""""log""""|""""!log""""|""""stop""""\fR/>" 4
.el .Ip "<\fBunknownattrs logaction=``log''|``!log''|``stop''\fR/>" 4
.IX Item "<unknownattrs logaction="log|!log|stop/>"
.PD 0
.if n .Ip "<\fBnestedattrs logaction=""""log""""|""""!log""""|""""stop""""\fR/>" 4
.el .Ip "<\fBnestedattrs logaction=``log''|``!log''|``stop''\fR/>" 4
.IX Item "<nestedattrs logaction="log|!log|stop/>"
.PD
Similar to the <unknowntext> and <nestedtext> elements described above,
these containers specify what to do with unknown or nested elements in
the <attributes> section during indexing.
.Sp
The offending elements are never indexed, but they can trigger messages
and/or termination of indexing.
.Sh "Searching Container"
.IX Subsection "Searching Container"
The elements permitted in a <searching> container are as follows:
.if n .Ip "<<highlight name=""""\fItagname\fR"""" on=""""\fIontext\fR"""" off=""""\fIofftext\fR"""">/>" 4
.el .Ip "<<highlight name=``\fItagname\fR'' on=``\fIontext\fR'' off=``\fIofftext\fR''>/>" 4
.IX Item "<<highlight name=""tagname on=ontext off=offtext">/>"
If preview text is being returned in a hit list, words present
in the preview text relevant to the original search terms in the preview
are highlighted.
By default, nextrieve will surround such terms with a
<b></b> pair.
It is possible to supply alternate highlighting text using the <highlight>
element.  If name="\fItagname\fR" is given, nextrieve will surround words
to be hightlighted with
.Sp
.Vb 2
\&    TABLESTART
\&    <tagname>word</tagname> TABLEEND
.Ve
Alternatively, if 'on="\fIontext\fR\*(L"' and 'off=\*(R"\fIofftext\fR\*(L"' are given, the text
\&\*(R"ontext\*(L" and \*(R"offtext" will be used directly to introduce and leave the
highlighted word respectively.
.if n .Ip "<\fBhitlistxml form=""""long""""|""""short""""\fR/>" 4
.el .Ip "<\fBhitlistxml form=``long''|``short''\fR/>" 4
.IX Item "<hitlistxml form="long|short/>"
When searching, the \s-1XML\s0 for the hitlist can be returned in a \*(L"long\*(R" form
(<hitlist>...</hitlist>) or a short form (<hl>...</hl>).  The <hitlistxml>
element specifies the default if the form wanted is not specified in the
query.
.Sp
If the <hitlistxml> element is not present, a default of form=\*(L"long\*(R"
is applied.
.if n .Ip "<\fBthreads connector=""""\f(BInconn\fB"""" worker=""""\f(BInworker\fB"""" core=""""\f(BIncore\fB""""\fR/>" 4
.el .Ip "<\fBthreads connector=``\f(BInconn\fB'' worker=``\f(BInworker\fB'' core=``\f(BIncore\fB''\fR/>" 4
.IX Item "<threads connector=""nconn worker=nworker core=ncore"/>"
The <threads> element specifies
the number of threads and connections allowed in a multi-threading
\&\fBntvsearchd\fR.
.Sp
\&\fInconn\fR defines the number of simultaneous client connections
allowed to \fBntvsearchd\fR.  If the system supports threads and the
server has been compiled with threading enabled, the request data arriving
for each connection is read by a dedicated thread, otherwise the request
data is read by a central loop.  This can be a number around 50,
for example.
.Sp
\&\fInworker\fR is only relevant for an \fBntvsearchd\fR compiled multi-threaded.
It defines the maximum number of simultanous requests able to be
active in the server at any one time.  This can have a value similar
to \fInconn\fR.
.Sp
\&\fIncore\fR is only relevant for an \fBntvsearchd\fR compiled multi-threaded.
It defines the maximum number of simultanous requests able to be
in the inner decode loop at any one time.   This is typically a small
value such as 5.
.Sp
To determine if \fBntvsearchd\fR has been compiled multi-threaded, use the
\&\-V option.  The number of threads and connections allowed is also printed
to the logfile by \fBntvsearchd\fR as the first log message after startup.
.if n .Ip "<\fBquerylog path=""""\f(BIqlogpath\fB""""\fR/>" 4
.el .Ip "<\fBquerylog path=``\f(BIqlogpath\fB''\fR/>" 4
.IX Item "<querylog path=""qlogpath"/>"
\&\fIqlogpath\fR specifies a directory in which \fBntvsearchd\fR will create a
file to be used for logging all search requests.  The name of the file
is constructed automatically from the current date and time when
\&\fBntvsearchd\fR starts up.
.Sh "Ultralite Containers"
.IX Subsection "Ultralite Containers"
The <ultralite> container is used by
\&\fBntvultralite\fR, nextrieve's \s-1HTML\s0 template filling application.
.PP
Different instances of \fBntvultralite\fR are given different values of
the environment variable \fB$NTVNAME\fR.  The value of this variable
is used for, among other things, to locate an <ntvultralite> element
in the resource file with an attribute of name=\*(L"$NTVNAME\*(R".  If this
container does not exist, \fBntvultralite\fR will read the \*(L"default\*(R"
container specified simply as <ntvultralite> with no \*(L"name\*(R" attribute.
.PP
The elements permitted in an <ultralite> container are as follows:
.if n .Ip "<\fBattrmap name=""""\f(BIattrname\fB"""" text=""""\f(BItext\fB""""\fR/>" 4
.el .Ip "<\fBattrmap name=``\f(BIattrname\fB'' text=``\f(BItext\fB''\fR/>" 4
.IX Item "<attrmap name=""attrname text=text"/>"
Used by the <ntv-attrmap*> tag in a template.  Arbitrary \s-1HTML\s0, specified
here as \fItext\fR, is substituted into the template if the nominated
attribute \fIattrname\fR is set on a particular hit.
.if n .Ip "<\fBfuzzybutton level=""""\f(BIn\fB"""" text=""""\f(BItext\fB""""\fR/>" 4
.el .Ip "<\fBfuzzybutton level=``\f(BIn\fB'' text=``\f(BItext\fB''\fR/>" 4
.IX Item "<fuzzybutton level=""n text=text"/>"
Used by the <ntv-ctl-fuzzyfactor> tag when it is filled with a <select>
\&\s-1HTML\s0 element.  The fuzzy level \fIn\fR is given select text of \fItext\fR.
.if n .Ip "<\fBserver name=""""\f(BIhost:port\fB""""\fR/>" 4
.el .Ip "<\fBserver name=``\f(BIhost:port\fB''\fR/>" 4
.IX Item "<server name=""host:port"/>"
If this container is present, \fBntvultralite\fR will communicate with the
nextrieve search
server nominated as \fIhost\fR and \fIport\fR to perform the query.
.Sp
If this container is not present, \fBntvultralite\fR will perform the query
directly on the text index.
.if n .Ip "<\fBvblsub name=""""vbl\f(BIname\fB"""" text=""""\f(BItext\fB""""\fR/>" 4
.el .Ip "<\fBvblsub name=``vbl\f(BIname\fB'' text=``\f(BItext\fB''\fR/>" 4
.IX Item "<vblsub name=""vblname text=text"/>"
.PD 0
.if n .Ip "<\fBvblrange name1=""""vbl\f(BIname1\fB"""" name2=""""vbl\f(BIname2\fB""""\fR/>" 4
.el .Ip "<\fBvblrange name1=``vbl\f(BIname1\fB'' name2=``vbl\f(BIname2\fB''\fR/>" 4
.IX Item "<vblrange name1=""vblname1 name2=vblname2"/>"
.if n .Ip "<\fBvbluse name=""""vbl\f(BIname\fB"""" type=""""constraint|""""text"""" class=""""any""""|""""all|""""not|""""free""""|""""ntv-vbl\f(BIname2\fB""""\fR/>" 4
.el .Ip "<\fBvbluse name=``vbl\f(BIname\fB'' type=``constraint|''text`` class=''any``|''all|``not|''free``|''ntv-vbl\f(BIname2\fB""""\fR/>" 4
.IX Item "<vbluse name=""vblname type=constraint|text class=any|all|not|free|"ntv-vblname2"/>"
.PD
A discussion of the use of \*(L"variables\*(R" in \fBntvultralite\fR can be found 
in \fIntvultralite\fR\|(1).
.if n .Ip "<\fBhitlimit total=""""\f(BImaxth\fB"""" displayed=""""\f(BIdisplayed\fB""""\fR/>" 4
.el .Ip "<\fBhitlimit total=``\f(BImaxth\fB'' displayed=``\f(BIdisplayed\fB''\fR/>" 4
.IX Item "<hitlimit total=""maxth displayed=displayed"/>"
The <hitlimit> element restricts the maximum number of total hits
and displayed hits asked for by a form to the values specified
as \fImaxth\fR and \fIdisplayed\fR respectively.
.Sp
By default total=\*(L"1000\*(R" and displayed=\*(L"100\*(R" are applied.
.if n .Ip "<\fBemitok value=""""0""""|""""1""""\fR/>" 4
.el .Ip "<\fBemitok value=``0''|``1''\fR/>" 4
.IX Item "<emitok value="0|1/>"
If present with a value of \*(L"1\*(R", ntvultralite will emit an \*(L"\s-1HTTP/1\s0.0 200 \s-1OK\s0\*(R"
line in the \s-1HTTP\s0 header.
.if n .Ip "<\fBlog value=""""0""""|""""1""""\fR/>" 4
.el .Ip "<\fBlog value=``0''|``1''\fR/>" 4
.IX Item "<log value="0|1/>"
If present with a value of \*(L"1\*(R", ntvultralite will automatically create or
append to a logfile named \f(CW$NTVBASE\fR/$NTVNAME/logs/ultralite.txt.
.if n .Ip "<\fBexecallow value=""""0""""|""""1""""\fR/>" 4
.el .Ip "<\fBexecallow value=``0''|``1''\fR/>" 4
.IX Item "<execallow value="0|1/>"
If present with a value of \*(L"1\*(R", the use of <ntv-exec> tags is
permitted in templates when ntvultralite is filling them.
.if n .Ip "<\fBswitchedtemplate keyword=""""\f(BIkwd\fB"""" tempatedir=""""\f(BItemplatedir\fB""""\fR/>" 4
.el .Ip "<\fBswitchedtemplate keyword=``\f(BIkwd\fB'' tempatedir=``\f(BItemplatedir\fB''\fR/>" 4
.IX Item "<switchedtemplate keyword=""kwd tempatedir=templatedir"/>"
A simple keyword scan is performed on the query string \*(-- if the query string
contains the word \fIkwd\fR, templates will be taken from the subdirectory
\&\fItemplatedir\fR under \f(CW$NTVBASE\fR/templates.
.Sp
Note that \fBswitchedtemplate\fR is only honored if there are
no <attributetemplate> containers in the resource file.
.if n .Ip "<\fBselectname name=""""\f(BIattrname\fB"""" text=""""\f(BIdisplayname\fB""""\fR/>" 4
.el .Ip "<\fBselectname name=``\f(BIattrname\fB'' text=``\f(BIdisplayname\fB''\fR/>" 4
.IX Item "<selectname name=""attrname text=displayname"/>"
This maps a flag-type attribute named \fIattrname\fR to text that will
be displayed in a select box on an \s-1HTML\s0 form.
Only required if <ntv-select> tags are used in templates.
.if n .Ip "<\fBattributetemplate attrname=""""\f(BIattrname\fB"""" templatedir=""""\f(BItemplatedir\fB""""\fR/>" 4
.el .Ip "<\fBattributetemplate attrname=``\f(BIattrname\fB'' templatedir=``\f(BItemplatedir\fB''\fR/>" 4
.IX Item "<attributetemplate attrname=""attrname templatedir=templatedir"/>"
A particular subdirectory under \f(CW$NTVBASE\fR/templates/ (named by
\&\fItemplatedir\fR) can be nominated to be
used if a particular flag-type attribute (named by \fIattrname\fR)
has been set on the search form.
This is intended for use when there is a single attribute set per form,
set by using <ntv-select> for example.  If multiple attributes are
present, the first \fBattributetemplate\fR element having a match on the form is
used.
The template files within this subdirectory follow the normal ntvultralite
file naming naming convention for templates.
.if n .Ip "<\fBlogicalindex name=""""\f(BIidxname\fB""""\fR/>" 4
.el .Ip "<\fBlogicalindex name=``\f(BIidxname\fB''\fR/>" 4
.IX Item "<logicalindex name=""idxname"/>"
If present, \fBntvultralite\fR will fill in an <indexname> container in the
query specifying that this logical text index is to be searched.
This is useful where there are multiple \*(L"logical\*(R" text indexes
in a single \*(L"physical\*(R" text index, managed by a nextrieve caching
server.
.Sh "\s-1UTF8\s0 Data Files"
.IX Subsection "UTF8 Data Files"
As part of a <utf8data> element in the resource file:
.PP
.Vb 4
\&    TABLESTART
\&    <utf8data classfile="classfilename"
\&              foldfile="foldfilename"
\&              decompfile="decompfilename"/> TABLEEND
.Ve
up to three files can be specified whose content will replace compiled-in
content of nextrieve utilities.
.PP
.I "classfilename"
.IX Subsection "classfilename"
.PP
A \fIclassfilename\fR specifies a file whose content defines the
classification of unicode data.
The first line of this file gives the value (in hex) of the maximum unicode
code point of an acceptable character.
Subsequent lines give the unicode code point (in hex) of a character,
followed by a space, followed by it's nextrieve-specific classification.
This classification is a decimal number representing the sum of the following
values:
.Ip "1" 4
.IX Item "1"
The character is an alpha character.
.Ip "2" 4
.IX Item "2"
The character is a digit.
.Ip "4" 4
.IX Item "4"
The character is an accented character.
.Ip "8" 4
.IX Item "8"
The character is equivalent to a space.
.Ip "16" 4
.IX Item "16"
The character is a control character, and will be replaced by a space during
indexing.
.PP
Any characters whose codes are not present in the utf8class.txt file
are given a nextrieve classification value of zero \*(-- ie, they will be
treated as punctuation.
.PP
.I "foldfilename"
.IX Subsection "foldfilename"
.PP
A \fIfoldfilename\fR specifies a file whose content defines the
case-folding of unicode data.  This information is used to map
words containing characters differing in case to the same word in
the index.
.PP
Each line of the file should start
with the unicode code point (in hex) of an \*(L"alpha\*(R" type character followed
by a space, then followed by a space-separated sequence of unicode code
points (in hex) of the character's lower-case equivalent.  Normally there
is just one entry in this sequence.  Accents should be preserved with
this transformation.
.PP
.I "decompfilename"
.IX Subsection "decompfilename"
.PP
A \fIdecompfilename\fR specifies a file whose content defines the
decomposition of an accented character to a non-accented form.
.PP
Each line of the file should start with the unicode code point (in hex) of
an accented (or decomposable) character, followed by a space and a
space-separated sequence of unicode code points (in hex) of the decomposition.
Accents should be removed in this transformation.
.PP
Note that it is possible to decompose the unicode code point for 1/4,
for example, into the sequence \*(L"1\*(R", \*(L"/\*(R", and \*(L"4\*(R".
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 1
\&    ntvsearch(1), ntvsearchd(1), ntvindex(1), ntvultralite(1), ntvcached(1).
.Ve
