.\" Automatically generated by Pod::Man version 1.15
.\" Fri Nov 22 12:11:09 2002
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "ntvindexerxml 5"
.TH ntvindexerxml 5 "2.0.0" "2002-11-22" "NexTrieve"
.UC
.SH "NAME"
ntvindexerxml \*(-- \s-1XML\s0 format of ntvindex input
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Information submitted to \fBntvindex\fR to be incorporated into a nextrieve
text index is presented in \s-1XML\s0 form.
The \s-1DTD\s0 describing the format of this \s-1XML\s0
can be found in \fIntvdtds\fR\|(5).
.PP
A nextrieve indexing stream is implemented as an <ntv:docseq> container.
There are a number of optional nested
elements in this container specifying documents (attributes and text)
to be indexed.
.PP
Each document to be indexed is enclosed in a <document> container.  Within
that, all attributes to applied to the document are collected in an
<attributes> container, and all text to be indexed is enclosed in
a <text> container.  This <text> container can have nested elements
representing text of different \*(L"types\*(R".
.PP
As an example, consider the following:
.PP
.Vb 2
\&    TABLESTART
\&    <ntv:docseq xmlns:ntv="http://www.nextrieve.com/1.0">
.Ve
.Vb 14
\&        <document>
\&            <attributes>
\&                <attr1>value1</attr1>
\&                <attr2>value2</attr2>
\&            </attributes>
\&            <text>
\&                Normal document text.
\&                <title>
\&                    Text in the document title -- a special text type.
\&                    that must be declared in the resource file.
\&                </title>
\&                More normal document text.
\&            </text>
\&        </document>
.Ve
.Vb 3
\&        <document>
\&            <!- the content of a second document... -->
\&        </document>
.Ve
.Vb 1
\&    </ntv:docseq>TABLEEND
.Ve
.Sh "<document>"
.IX Subsection "<document>"
Each <document> container encloses all the information for a single
document that is to be indexed.  This consists of attributes to be
applied, and text to be indexed.
.PP
.I "<attributes>"
.IX Subsection "<attributes>"
.PP
The <attributes> container within a <document> collects all the
attribute information to be applied to a document.
.PP
A document attribute is a name/value pair, where the allowable
names and types are declared in the resource file for the text index
using <attribute> elements.
.PP
The name/value pair for each attribute to apply is specified as:
.PP
.Vb 1
\&    <name>value</name>
.Ve
If a particular attribute is declared as a \*(L"flag\*(R" type attribute, its
only legal values are 0 and non-zero.  If the attribute is not specified,
it is automatically given a value of \*(L"0\*(R" (off) for that document.
If it is specified, it can have one of the following forms:
.Ip "<\fBattr\fR>0</\fBattr\fR>" 4
.IX Item "<attr>0</attr>"
Off.
.Ip "<\fBattr\fR>1</\fBattr\fR>" 4
.IX Item "<attr>1</attr>"
.PD 0
.Ip "<\fBattr\fR/>" 4
.IX Item "<attr/>"
.Ip "<\fBattr\fR></\fBattr\fR>" 4
.IX Item "<attr></attr>"
.PD
On
.PP
If a given attribute is declared as 'key=\*(L"key-unique\*(R"', it should be noted
that if a document is presented having this attribute set to the same value
as a document already existing in the text index, the \fIexisting document
will be automatically marked as deleted\fR.
.PP
Also, if a given attribute is marked as possibly having multiple values
for a single document (ie, \*(L"nvals='*'\*(R" is used in the <attribute>
declaration in the resource file), the multiple values are specified
by simply repeating the <attrname>value</attrname> container as
required.
.PP
.I "<text>"
.IX Subsection "<text>"
.PP
The text for a document is presented in a <text> container.  Text present
at the top-level of this container is indexed as \*(L"default\*(R" text.  It
is possible to have other areas of text, \*(L"types\*(R" of text, specially
marked so they can be searched separately.
.PP
Each \*(L"texttype\*(R" is declared in the resource file for the text index
using <texttype name="\fIttname\fR"/> elements.  For each \fIttname\fR
defined in this way, it is possible to have a nested container or
containers of the same name in the <text> container of the document.
.PP
Eg, with a declaration of:
.PP
.Vb 1
\&    <texttype name="title"/>
.Ve
in the resource file, it is possible to have a document containing:
.PP
.Vb 6
\&    <document>
\&        <text>
\&        default text.
\&        <title>searchable text in the title.</title>
\&        more default text.
\&    </document>
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 1
\&    ntvindex(1), ntvresourcefile(5)
.Ve
